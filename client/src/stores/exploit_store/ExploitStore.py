from common import Exploit


class ExploitStore:
    """
    A class for storing and managing a set of Exploit objects.

    Attributes:
        exploits (set[Exploit]): The set of Exploit objects stored in the store.
    """

    def __init__(self):
        """Initialize an empty ExploitStore."""
        self.exploits = set()

    def add_exploit(self, exploit: Exploit) -> None:
        """
        Add an Exploit object to the store.

        Args:
            exploit (Exploit): The exploit to add to the store.
        """
        self.exploits.add(exploit)

    def remove_exploit(self, exploit: Exploit) -> None:
        """
        Remove an Exploit object from the store.

        Args:
            exploit (Exploit): The exploit to remove from the store.
        """
        self.exploits.remove(exploit)

    def get_exploits(self) -> set[Exploit]:
        """
        Get the set of Exploit objects stored in the store.

        Returns:
            The set of Exploit objects stored in the store.
        """
        return self.exploits
